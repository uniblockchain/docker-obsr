worker_processes auto;

events {
    worker_connections  1024;
}

http {
    include             mime.types;
    default_type        application/octet-stream;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    keepalive_requests  200;
    gzip                on;
    gzip_http_version   1.1;
    gzip_vary           on;
    gzip_comp_level     6;
    gzip_proxied        any;
    gzip_buffers        16 8k;
    gzip_disable        "MSIE [1-6]\.(?!.*SV1)";
    server_tokens       off;
    error_log           stderr notice;
    access_log          /dev/stdout;

    server {
        listen 443 ssl;
        server_name localhost _;

        ssl_certificate       /certs/lebshama/privkey.pem;
        ssl_certificate_key   /certs/lebshama/privkey.pem;
        ssl_dhparam           /certs/dhparam1024.pem; #1024 is max for java 6 and 7
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        # These ciphers should be considered potentially safe to add (for the purpose of allowing web restores with older browsers etc)
        #    https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
        #ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:DES-CBC3-SHA:HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP:!DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA';

        # Cross refernce Ahsay's recommended ciphers with a translation to openssl format
        #    https://forum.ahsay.com/viewtopic.php?f=82&t=13520
        #    https://www.openssl.org/docs/manmaster/man1/ciphers.html#CIPHER-SUITE-NAMES
        #ssl_ciphers 'RC4-MD5:RC4-SHA:AES128-SHA:AES256-SHA256:DES-CBC3-SHA';
        ssl_ciphers 'AES128-SHA:AES256-SHA256';  # Weak ciphers removed again




        listen 80;
        server_name localhost _;
        #access_log /var/log/nginx/access.log;
        #error_log /var/log/nginx/error.log;


        location / {
            proxy_pass http://obsr:8080;
            proxy_redirect off;

            # Note this requires changing tomcat to make use of
            #  https://tomcat.apache.org/tomcat-6.0-doc/api/org/apache/catalina/valves/RemoteIpValve.html
            #  Also, obsr/conf/server.xml will need the following:
            #     <Valve className="org.apache.catalina.valves.RemoteIpValve" remoteIpHeader="X-Forwarded-For" requestAttributesEnabled="true" internalProxies="172.1[6-9]\.\d+\.\d+, 172.2[0-9]\.\d+\.\d+, 172.3[0-1]\.\d+\.\d+" />
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

    }

}
